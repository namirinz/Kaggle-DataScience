# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hA-o0E_2IYGEPCyo1_0-rsprKKefl8R3
"""

import pandas as pd
import numpy as np

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.pipeline import make_pipeline
from sklearn.metrics import r2_score,mean_squared_error,mean_absolute_error

df = pd.read_csv('datasets/Admission_Predict_Ver1.1.csv')
df['Chance of Admit'] = df['Chance of Admit ']

y = df['Chance of Admit'].values
X = df.drop(columns = ['Serial No.','Chance of Admit']).values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 42)

pipeline = make_pipeline(StandardScaler(), LinearRegression())

pipeline.fit(X_train, y_train)

y_pred = pipeline.predict(X_test)

print("Model score :",pipeline.score(X_test, y_test))
print("Model score (R2) :",r2_score(y_test, y_pred))

MSE = mean_squared_error(y_test, y_pred)
MAE = mean_absolute_error(y_test, y_pred)
RMSE = np.sqrt(MSE)

# less mean good model
print("Mean Squared Error :",round(MSE,34))
print("Root Mean Squared Error :",round(RMSE,18))
print("Mean Absolute Error :",round(MAE,18))
